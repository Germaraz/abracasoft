 /*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pantallas;

import java.awt.Component;
import javax.swing.JCheckBox;
import javax.swing.JComponent;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import negocio.PrivilegioNegocio;
import negocio.UsuarioNegocio;

/**
 *
 * @author Ema
 */
public class AltaDeUsuario extends javax.swing.JFrame {

    /**
     * Creates new form AltaDeUsuario
     */
    public AltaDeUsuario() {
        initComponents();
        agregarPrivilegiosATabla();
        NombreDeUsuariojTextField1.requestFocus();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Titulo = new javax.swing.JLabel();
        UsuariojLabel = new javax.swing.JLabel();
        NombreDeUsuariojTextField1 = new javax.swing.JTextField();
        PassjLabel = new javax.swing.JLabel();
        ContraseniajTextField2 = new javax.swing.JTextField();
        RepitaPassjLabel = new javax.swing.JLabel();
        ContraseniajTextField3 = new javax.swing.JTextField();
        TipoUsuariojLabel = new javax.swing.JLabel();
        TipoDeUsuariojComboBox1 = new javax.swing.JComboBox();
        PrivilegiosjLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        GuardarjButton = new javax.swing.JButton();
        SalirjButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Ingreso de Usuarios Administrador");
        setExtendedState(AltaDeUsuario.MAXIMIZED_BOTH);

        Titulo.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        Titulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Titulo.setText("Carga de usuarios");
        Titulo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        UsuariojLabel.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        UsuariojLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        UsuariojLabel.setText("Nombre de usuario:");

        NombreDeUsuariojTextField1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N

        PassjLabel.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        PassjLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        PassjLabel.setText("Contraseña:");

        ContraseniajTextField2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        ContraseniajTextField2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ContraseniajTextField2KeyTyped(evt);
            }
        });

        RepitaPassjLabel.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        RepitaPassjLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        RepitaPassjLabel.setText("Repita la contraseña:");

        ContraseniajTextField3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        ContraseniajTextField3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ContraseniajTextField3KeyTyped(evt);
            }
        });

        TipoUsuariojLabel.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        TipoUsuariojLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TipoUsuariojLabel.setText("Tipo de usuario:");

        TipoDeUsuariojComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Dueño", "Administrador", "Empleado" }));
        TipoDeUsuariojComboBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                TipoDeUsuariojComboBox1ItemStateChanged(evt);
            }
        });

        PrivilegiosjLabel.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        PrivilegiosjLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        PrivilegiosjLabel.setText("Privilegios:");

        jTable1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTable1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Descripción", "Selección"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Boolean.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        GuardarjButton.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        GuardarjButton.setText("Guardar");
        GuardarjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GuardarjButtonActionPerformed(evt);
            }
        });

        SalirjButton.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        SalirjButton.setText("Salir");
        SalirjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SalirjButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(UsuariojLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(PassjLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(RepitaPassjLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TipoUsuariojLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(NombreDeUsuariojTextField1)
                            .addComponent(ContraseniajTextField2)
                            .addComponent(ContraseniajTextField3)
                            .addComponent(TipoDeUsuariojComboBox1, 0, 271, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(PrivilegiosjLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(82, 82, 82)
                        .addComponent(Titulo, javax.swing.GroupLayout.PREFERRED_SIZE, 1250, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(SalirjButton, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(117, 117, 117)
                .addComponent(GuardarjButton, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(501, 501, 501))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(Titulo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(NombreDeUsuariojTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(UsuariojLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(ContraseniajTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PassjLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE))
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(ContraseniajTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(RepitaPassjLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(TipoUsuariojLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TipoDeUsuariojComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(PrivilegiosjLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(GuardarjButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(SalirjButton, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
//Metodo que capta cuando el jComboBox cambia de estado 
    private void TipoDeUsuariojComboBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_TipoDeUsuariojComboBox1ItemStateChanged
        //Obtiene el item seleccionado del jComboBox, lo pasa a String y pregunta
        //si es igual a la palabra "Administrador" lo mismo hace para ver si es "Empleado"
        if (TipoDeUsuariojComboBox1.getSelectedItem().toString().equals("Administrador")) {
            for (int i = 0; i < jTable1.getRowCount(); i++) {
                //Convierte el indice de la fila a un modelo de tabla editable
                jTable1.convertRowIndexToModel(i);
                //Pregunta si el valor de la celda es igual a "Gestion de Usuarios"
                //o a "BackUp"
                if (jTable1.getModel().getValueAt(i, 1).equals("Gestion de Usuarios")
                        | jTable1.getModel().getValueAt(i, 1).equals("BackUp")) {
                    // Le asigna "True" como valor de la celda
                    jTable1.getModel().setValueAt(true, i, 2);
                } else {
                    // Si no asigna "False", lo mismo realiza para empleado
                    jTable1.getModel().setValueAt(false, i, 2);
                }
            }
        } else if (TipoDeUsuariojComboBox1.getSelectedItem().toString().equals("Empleado")) {
            for (int i = 0; i < jTable1.getRowCount(); i++) {
                jTable1.convertRowIndexToModel(i);
                if (jTable1.getModel().getValueAt(i, 1).equals("Gestion de Presupuestos")
                        | jTable1.getModel().getValueAt(i, 1).equals("Operaciones Diarias")) {
                    jTable1.getModel().setValueAt(true, i, 2);
                } else {
                    jTable1.getModel().setValueAt(false, i, 2);
                }
            }
            //si dueño es lo que se selecciona asigna true a todas las celdas exepto a BackUp
        } else {
            for (int i = 0; i < jTable1.getRowCount(); i++) {
                jTable1.convertRowIndexToModel(i);
                if (jTable1.getModel().getValueAt(i, 1).equals("BackUp")) {
                    jTable1.getModel().setValueAt(false, i, 2);
                } else {
                    jTable1.getModel().setValueAt(true, i, 2);
                }

            }
        }
    }//GEN-LAST:event_TipoDeUsuariojComboBox1ItemStateChanged

    private void GuardarjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GuardarjButtonActionPerformed
        // TODO add your handling code here:
        int resultado;
        validar();
        UsuarioNegocio usuario = new UsuarioNegocio();
        usuario.setNombreUsuario(NombreDeUsuariojTextField1.getText().toUpperCase());
        usuario.setPassUsuario(Integer.parseInt(ContraseniajTextField3.getText()));
        int[] privilegios = new int[jTable1.getRowCount()];
        for (int i = 0; i < jTable1.getRowCount(); i++) {
            jTable1.convertRowIndexToModel(i);
            if (jTable1.getModel().getValueAt(i, 2).equals(true)) {
                privilegios[i] = (int) (jTable1.getValueAt(i, 0));
            }
        }
        resultado = usuario.AltaDeUsuarioNegocio(usuario, privilegios);
        if (resultado == 1) {
            JOptionPane.showMessageDialog(null, "Se agrego el usuario");
        } else {
            JOptionPane.showMessageDialog(null, "Se ha producido un error");
        }
    }//GEN-LAST:event_GuardarjButtonActionPerformed

    private void SalirjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SalirjButtonActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_SalirjButtonActionPerformed

    private void ContraseniajTextField2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ContraseniajTextField2KeyTyped
        // TODO add your handling code here:
        char car = evt.getKeyChar();
        if ((car < '0' || car > '9')) {
            evt.consume();
        }
    }//GEN-LAST:event_ContraseniajTextField2KeyTyped

    private void ContraseniajTextField3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ContraseniajTextField3KeyTyped
        // TODO add your handling code here:
        char car = evt.getKeyChar();
        if ((car < '0' || car > '9')) {
            evt.consume();
        }
    }//GEN-LAST:event_ContraseniajTextField3KeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AltaDeUsuario.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AltaDeUsuario.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AltaDeUsuario.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AltaDeUsuario.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AltaDeUsuario().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField ContraseniajTextField2;
    private javax.swing.JTextField ContraseniajTextField3;
    private javax.swing.JButton GuardarjButton;
    private javax.swing.JTextField NombreDeUsuariojTextField1;
    private javax.swing.JLabel PassjLabel;
    private javax.swing.JLabel PrivilegiosjLabel;
    private javax.swing.JLabel RepitaPassjLabel;
    private javax.swing.JButton SalirjButton;
    private javax.swing.JComboBox TipoDeUsuariojComboBox1;
    private javax.swing.JLabel TipoUsuariojLabel;
    private javax.swing.JLabel Titulo;
    private javax.swing.JLabel UsuariojLabel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

    private void validar() {
        if (NombreDeUsuariojTextField1.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "No ha ingresado su nombre de usuario");
            NombreDeUsuariojTextField1.requestFocus();
        } else if (ContraseniajTextField2.getText().length() < 4 || ContraseniajTextField2.getText().length() > 12) {
            JOptionPane.showMessageDialog(null, "La contraseña debe tener entre 4 y 12 caracteres");
            ContraseniajTextField2.requestFocus();
        } else {
            if (!ContraseniajTextField3.getText().equals(ContraseniajTextField2.getText())) {
                JOptionPane.showMessageDialog(null, "Las contraseñas tienen que ser iguales");
                ContraseniajTextField3.requestFocus();
            }
        }
    }

    private void agregarPrivilegiosATabla() {
        DefaultTableModel tabla = (DefaultTableModel) jTable1.getModel();
        PrivilegioNegocio privilegios = new PrivilegioNegocio();
        if (!privilegios.listarPrivilegios().isEmpty()) {
            Object[] datos = new Object[3];
            for (int i = 0; i < privilegios.listarPrivilegios().size(); i++) {
                datos[0] = privilegios.listarPrivilegios().get(i).getID();
                datos[1] = privilegios.listarPrivilegios().get(i).getDescripcionDePrivilegio();
                if (!privilegios.listarPrivilegios().get(i).getDescripcionDePrivilegio().equals("BackUp")) {
                    datos[2] = true;
                }
                tabla.addRow(datos);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Error: No se pudieron cargar los privilegios");
        }
    }
}
