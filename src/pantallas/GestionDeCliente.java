/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pantallas;

import entidades.Cliente;
import entidades.Pago;
import entidades.Venta;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author German
 */
public class GestionDeCliente extends javax.swing.JFrame {

    private ArrayList<ArrayList<Venta>> ventas = new ArrayList<>();
    private ArrayList<Pago> pagos = new ArrayList<>();
    private TableRowSorter trsFiltro;

    /**
     * Creates new form GestinonCliente
     */
    public GestionDeCliente() {
        AparienciaPantalla apa = new AparienciaPantalla();
        apa.cambiarApariencia("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
        initComponents();
        agregarClientesATabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        EditajButton = new javax.swing.JButton();
        DarDeBajaClijButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        ClientesjTable = new javax.swing.JTable();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane2 = new javax.swing.JScrollPane();
        CuentaCorrientejTable = new javax.swing.JTable();
        NuevoClientejButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        FiltrojComboBox = new javax.swing.JComboBox<>();
        FiltrojTextField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Gestion de clientes - OSG");
        setMinimumSize(new java.awt.Dimension(713, 510));

        EditajButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        EditajButton.setText("Editar cliente");
        EditajButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditajButtonActionPerformed(evt);
            }
        });

        DarDeBajaClijButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        DarDeBajaClijButton.setText("Eliminar cliente");

        ClientesjTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Apellido y Nombre", "DNI", "Sexo", "Provincia", "Localidad", "Codigo Postal", "DirecciÃ³n", "Email", "Telefono"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        ClientesjTable.getTableHeader().setReorderingAllowed(false);
        ClientesjTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ClientesjTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(ClientesjTable);
        if (ClientesjTable.getColumnModel().getColumnCount() > 0) {
            ClientesjTable.getColumnModel().getColumn(0).setMinWidth(30);
            ClientesjTable.getColumnModel().getColumn(0).setPreferredWidth(30);
            ClientesjTable.getColumnModel().getColumn(0).setMaxWidth(40);
        }

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        CuentaCorrientejTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Venta", "Fecha", "Importe Total", "Pago", "Saldo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        CuentaCorrientejTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(CuentaCorrientejTable);

        NuevoClientejButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        NuevoClientejButton.setText("Nuevo cliente");
        NuevoClientejButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NuevoClientejButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("Buscar por:");

        FiltrojComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Apellido y Nombre", "Nro de Documento" }));

        FiltrojTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                FiltrojTextFieldKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1305, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 407, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(NuevoClientejButton)
                                .addGap(18, 18, 18)
                                .addComponent(EditajButton)
                                .addGap(18, 18, 18)
                                .addComponent(DarDeBajaClijButton))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(FiltrojComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(FiltrojTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(FiltrojComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(FiltrojTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 338, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(NuevoClientejButton)
                    .addComponent(EditajButton)
                    .addComponent(DarDeBajaClijButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void NuevoClientejButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NuevoClientejButtonActionPerformed
        // TODO add your handling code here:
        AltaCliente altacliente = new AltaCliente();
        altacliente.setTitle("Nuevo Cliente");
        altacliente.setVisible(true);
    }//GEN-LAST:event_NuevoClientejButtonActionPerformed

    private void EditajButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditajButtonActionPerformed
        // TODO add your handling code here:
        abrirEditarCliente();
    }//GEN-LAST:event_EditajButtonActionPerformed

    private void ClientesjTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ClientesjTableMouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 1) {
            agregarVentasPorCliente();
        } else if (evt.getClickCount() == 2) {
            abrirEditarCliente();
        }
    }//GEN-LAST:event_ClientesjTableMouseClicked

    private void FiltrojTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_FiltrojTextFieldKeyTyped
        // TODO add your handling code here:
        FiltrojTextField.addKeyListener(new KeyAdapter() {
            public void keyReleased(final KeyEvent e) {
                String cadena = (FiltrojTextField.getText());
                FiltrojTextField.setText(cadena);
                repaint();
                filtro();
            }
        });
        trsFiltro = new TableRowSorter(ClientesjTable.getModel());
        ClientesjTable.setRowSorter(trsFiltro);
    }//GEN-LAST:event_FiltrojTextFieldKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GestionDeCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GestionDeCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GestionDeCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GestionDeCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GestionDeCliente().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable ClientesjTable;
    private javax.swing.JTable CuentaCorrientejTable;
    private javax.swing.JButton DarDeBajaClijButton;
    private javax.swing.JButton EditajButton;
    private javax.swing.JComboBox<String> FiltrojComboBox;
    private javax.swing.JTextField FiltrojTextField;
    private javax.swing.JButton NuevoClientejButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    // End of variables declaration//GEN-END:variables

    private void limpiarTabla(JTable tabla) {
        int filas = tabla.getRowCount();
        if (filas != -1) {
            DefaultTableModel defaultTabla = (DefaultTableModel) tabla.getModel();
            for (int i = filas; i >= -1; i--) {
                defaultTabla.removeRow(i);
            }
        }
    }

    private void agregarClientesATabla() {
        ArrayList<Cliente> clientes;
        try {
            clientes = new Cliente().listarClientes();
            if (!clientes.isEmpty()) {
                DefaultTableModel tabla = (DefaultTableModel) ClientesjTable.getModel();
                Object[] columnas = new Object[10];
                for (int i = 0; i < clientes.size(); i++) {
                    columnas[0] = clientes.get(i).getIdCliente();
                    columnas[1] = clientes.get(i).getApellidoCliente() + clientes.get(i).getNombreCliente();
                    columnas[2] = clientes.get(i).getDniCliente();
                    columnas[3] = clientes.get(i).getSexo();
                    columnas[4] = clientes.get(i).getLocalidad().getProvincia().getNombreProvincia();
                    columnas[5] = clientes.get(i).getLocalidad().getNombreLocalidad();
                    columnas[6] = clientes.get(i).getLocalidad().getCodigoPosta();
                    columnas[7] = clientes.get(i).getDireccionCliente();
                    columnas[8] = clientes.get(i).getMailCliente();
                    columnas[9] = clientes.get(i).getTelefonoCliente();
                    ventas.add(new Venta().obtenerVentasCliente(clientes.get(i).getIdCliente()));
                    tabla.addRow(columnas);
                }
            } else {
                JOptionPane.showMessageDialog(null, "Aun no cargado ningun cliente. Por favor ingrese uno");
            }
        } catch (Exception e) {
            Logger.getLogger(GestionDeProveedores.class.getName()).log(Level.SEVERE, e.getMessage(), e);
            JOptionPane.showMessageDialog(null, "ERROR: " + e.getMessage());
        }
    }

    private void filtro() {
        int columnaABuscar = 0;
        if ("Apellido y Nombre".equals(FiltrojComboBox.getSelectedItem().toString())) {
            columnaABuscar = 2;
        }
        if ("Nro de Documento".equals(FiltrojComboBox.getSelectedItem().toString())) {
            columnaABuscar = 3;
        }
        trsFiltro.setRowFilter(RowFilter.regexFilter(FiltrojTextField.getText(), columnaABuscar));
    }

    private void agregarVentasPorCliente() {
        limpiarTabla(CuentaCorrientejTable);
        try {
            int fila = ClientesjTable.getSelectedRow();
            if (!ventas.isEmpty()) {
                DefaultTableModel tabla = (DefaultTableModel) ClientesjTable.getModel();
                Object[] columnas = new Object[5];
                if (!ventas.get(fila).isEmpty()) {
                    for (int i = 0; i < ventas.get(fila).size(); i++) {
                        columnas[0] = ventas.get(fila).get(i).getIdVenta();
                        columnas[1] = ventas.get(fila).get(i).getFechaVenta();
                        double montoTotalCompra = ventas.get(fila).get(i).getMontoVenta() + ventas.get(fila).get(i).getIvaVenta();
                        columnas[2] = montoTotalCompra;
                        int idventa = ventas.get(fila).get(i).getIdVenta();
                        pagos = new Pago().obtenerPagosVenta(idventa);
                        double pagoTotal = 0;
                        for (int j = 0; j < pagos.size(); j++) {
                            pagoTotal = pagoTotal + pagos.get(i).getMontoPago();
                        }
                        columnas[3] = pagoTotal;
                        double saldo = montoTotalCompra - pagoTotal;
                        columnas[4] = saldo;
                        tabla.addRow(columnas);
                    }
                }
            }
        } catch (Exception e) {
            Logger.getLogger(GestionDeProveedores.class.getName()).log(Level.SEVERE, e.getMessage(), e);
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }

    private void abrirEditarCliente() {
        if (ClientesjTable.getSelectedRow() != -1) {
            int fila = ClientesjTable.getSelectedRow();
            int idCliente = (int) ClientesjTable.getValueAt(fila, 0);
            try {
                Cliente cliente = new Cliente().obtenerClientePorId(idCliente);
                AltaCliente modCliente = new AltaCliente();
                modCliente.ClienteDNIjTextField.setText(Integer.toString(cliente.getDniCliente()));
                modCliente.ClienteApellidojTextField.setText(cliente.getApellidoCliente());
                modCliente.ClienteNombrejTextField.setText(cliente.getNombreCliente());
                modCliente.FecNacjDateChooser.setDate(cliente.getFechaNacimiento());
                int idSexo;
                if (cliente.getSexo().equals("Masculino")) {
                    idSexo = 0;
                } else {
                    idSexo = 1;
                }
                modCliente.SexojComboBox.setSelectedIndex(idSexo);
                int idProv = cliente.getLocalidad().getProvincia().getIdProvincia();
                modCliente.ProvinciasjComboBox.setSelectedIndex(idProv);
                modCliente.LocalidadesjComboBox.setSelectedIndex(cliente.getLocalidad().getIdLocalidad());
                modCliente.CodPostjTextField.setText(Integer.toString(cliente.getLocalidad().getCodigoPosta()));
                modCliente.ClienteDireccionjTextField.setText(cliente.getDireccionCliente());
                modCliente.ClienteEmailjTextField.setText(cliente.getMailCliente());
                modCliente.ClienteTelefonojTextField.setText(Long.toString(cliente.getTelefonoCliente()));
                modCliente.setTitle("Modificar Cliente");
                modCliente.setVisible(true);
            } catch (Exception e) {
                Logger.getLogger(GestionDeProveedores.class.getName()).log(Level.SEVERE, e.getMessage(), e);
                JOptionPane.showMessageDialog(null, e.getMessage());
            }
        } else {
            JOptionPane.showMessageDialog(null, "Debe selecionar al menos una fila de la tabla para poder editar");
        }
    }

}
