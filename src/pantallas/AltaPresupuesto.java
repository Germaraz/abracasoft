/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package pantallas;

import entidades.Cliente;
import entidades.Producto;
import gestores.GestorCliente;
import gestores.GestorProducto;
import java.awt.Component;
import java.awt.event.KeyEvent;
import static java.lang.Float.parseFloat;
import static java.lang.Integer.parseInt;
import static java.lang.Integer.parseInt;
import static java.lang.Long.parseLong;
import static java.lang.Long.parseLong;
import static java.lang.Long.parseLong;
import static java.lang.Long.parseLong;
import static java.lang.String.valueOf;
import static java.lang.String.valueOf;
import static java.lang.String.valueOf;
import static java.lang.String.valueOf;
import static java.lang.String.valueOf;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author German
 */
public class AltaPresupuesto extends javax.swing.JFrame {

    /**
     * Creates new form AltaPresupuesto
     */
    public AltaPresupuesto() {
        AparienciaPantalla apa = new AparienciaPantalla();
        apa.cambiarApariencia("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jRadioButton3 = new javax.swing.JRadioButton();
        jPanel1 = new javax.swing.JPanel();
        BeliminarProducto = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        detalleProducto = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        precioTotal = new javax.swing.JTextField();
        guardarPesup = new javax.swing.JButton();
        ayuda = new javax.swing.JButton();
        cancelarPresup = new javax.swing.JButton();
        listaCliente = new javax.swing.JComboBox();
        nombreCliente = new javax.swing.JTextField();
        direccionCliente = new javax.swing.JTextField();
        clienteElegido = new javax.swing.JTextField();
        telCliente = new javax.swing.JTextField();
        dniCliente = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        mailCliente = new javax.swing.JTextField();
        aVenta = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        codigoBarra = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        formaDePago = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();
        cantidadRenglon = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jbClienteCasual = new javax.swing.JButton();

        jRadioButton3.setText("jRadioButton3");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Nuevo presupuesto - Abracasoft");

        BeliminarProducto.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        BeliminarProducto.setText("Quitar Producto Seleccionado");
        BeliminarProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BeliminarProductoActionPerformed(evt);
            }
        });

        detalleProducto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Producto", "Cantidad", "Precio Unitario", "Precio Total"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Long.class, java.lang.String.class, java.lang.Integer.class, java.lang.Float.class, java.lang.Float.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(detalleProducto);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Total");

        precioTotal.setEditable(false);
        precioTotal.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        guardarPesup.setText("Guardar e Imprimir presupuesto");
        guardarPesup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarPesupActionPerformed(evt);
            }
        });

        ayuda.setText("Ayuda");
        ayuda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ayudaActionPerformed(evt);
            }
        });

        cancelarPresup.setText("Cancelar");
        cancelarPresup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarPresupActionPerformed(evt);
            }
        });

        listaCliente.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                listaClienteItemStateChanged(evt);
            }
        });

        nombreCliente.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, java.awt.Color.lightGray));
        nombreCliente.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                nombreClienteCaretUpdate(evt);
            }
        });

        direccionCliente.setEditable(false);
        direccionCliente.setBackground(new java.awt.Color(204, 204, 204));

        clienteElegido.setEditable(false);
        clienteElegido.setBackground(new java.awt.Color(204, 204, 204));

        telCliente.setEditable(false);
        telCliente.setBackground(new java.awt.Color(204, 204, 204));

        dniCliente.setEditable(false);
        dniCliente.setBackground(new java.awt.Color(204, 204, 204));

        jLabel2.setText("Apellido y Nombre:");

        jLabel3.setText("Tel:");

        jLabel4.setText("Domicilio:");

        jLabel5.setText("DNI:");

        jLabel6.setText("Mail:");

        mailCliente.setEditable(false);
        mailCliente.setBackground(new java.awt.Color(204, 204, 204));

        aVenta.setText("Transformar en Venta e Imprimir");
        aVenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aVentaActionPerformed(evt);
            }
        });

        jLabel7.setText("Cliente:");

        codigoBarra.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        codigoBarra.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                codigoBarraKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                codigoBarraKeyTyped(evt);
            }
        });

        jLabel8.setText("Codigo:");

        jButton5.setFont(new java.awt.Font("Times", 1, 12)); // NOI18N
        jButton5.setText("+");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        formaDePago.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Efectivo", "Débito", "Crédito", "Cuenta Corriente", "Pago Parcial" }));
        formaDePago.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                formaDePagoItemStateChanged(evt);
            }
        });

        jLabel9.setText("Forma de Pago:");

        cantidadRenglon.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        cantidadRenglon.setText("1");
        cantidadRenglon.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        cantidadRenglon.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cantidadRenglonKeyTyped(evt);
            }
        });

        jLabel10.setText("x");

        jbClienteCasual.setFont(new java.awt.Font("Times", 1, 12)); // NOI18N
        jbClienteCasual.setText("Cliente Casual");
        jbClienteCasual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbClienteCasualActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel6)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(mailCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(direccionCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(clienteElegido, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(dniCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(telCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(18, 18, 18)
                                .addComponent(nombreCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(listaCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jbClienteCasual))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(39, 39, 39)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(ayuda)
                                        .addGap(458, 458, 458)
                                        .addComponent(aVenta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                                .addComponent(cancelarPresup)
                                                .addGap(18, 18, 18)
                                                .addComponent(guardarPesup))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(codigoBarra, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jLabel10)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(cantidadRenglon, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(324, 324, 324)
                                                .addComponent(jLabel1)
                                                .addGap(18, 18, 18)
                                                .addComponent(precioTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                                .addComponent(BeliminarProducto)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jLabel9)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(formaDePago, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nombreCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(listaCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(jButton5)
                    .addComponent(jbClienteCasual))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(clienteElegido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(telCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dniCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(direccionCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(mailCliente)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(26, 26, 26)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(precioTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(codigoBarra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8)
                            .addComponent(cantidadRenglon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))))
                .addGap(17, 17, 17)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(formaDePago, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(BeliminarProducto))
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(guardarPesup, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cancelarPresup))
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(aVenta, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ayuda))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ayudaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ayudaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ayudaActionPerformed

    private void cancelarPresupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarPresupActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_cancelarPresupActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        new AltaCliente().setVisible(true);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void codigoBarraKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_codigoBarraKeyTyped
        char car = evt.getKeyChar();
        if ((car < '0' || car > '9')) {
            evt.consume();
        }
        if (codigoBarra.getText().trim().length() == 13){
            agregarRenglon();
        }
    }//GEN-LAST:event_codigoBarraKeyTyped

    private void codigoBarraKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_codigoBarraKeyReleased
        char car = evt.getKeyChar();
        if ((car < '0' || car > '9')) {
            evt.consume();
        }
        if (codigoBarra.getText().trim().length() == 13){
            agregarRenglon();
        }        // TODO add your handling code here:
    }//GEN-LAST:event_codigoBarraKeyReleased

    private void nombreClienteCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_nombreClienteCaretUpdate
        buscarMientrasEscribe();
    }//GEN-LAST:event_nombreClienteCaretUpdate

    private void listaClienteItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_listaClienteItemStateChanged
        if (listaCliente.getSelectedItem()!=null){
            Cliente c = (Cliente) listaCliente.getSelectedItem();
            clienteElegido.setText(c.getNombreCliente());
            telCliente.setText(valueOf(c.getTelefonoCliente()));
            direccionCliente.setText(c.getDireccionCliente());
            mailCliente.setText(c.getMailCliente());
        };        
    }//GEN-LAST:event_listaClienteItemStateChanged

    private void cantidadRenglonKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cantidadRenglonKeyTyped
        char car = evt.getKeyChar();
        if ((car < '0' || car > '9')) {
            evt.consume();
        }
    }//GEN-LAST:event_cantidadRenglonKeyTyped

    private void BeliminarProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BeliminarProductoActionPerformed
        eliminarItemProducto();
    }//GEN-LAST:event_BeliminarProductoActionPerformed

    private void jbClienteCasualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbClienteCasualActionPerformed
        clienteElegido.setText("");
        direccionCliente.setText("");
        telCliente.setText("");
        mailCliente.setText("");
        dniCliente.setText("");
        nombreCliente.setText("");
        listaCliente.removeAllItems();
    }//GEN-LAST:event_jbClienteCasualActionPerformed

    private void formaDePagoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_formaDePagoItemStateChanged
        recalcularImporte();
    }//GEN-LAST:event_formaDePagoItemStateChanged

    private void guardarPesupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarPesupActionPerformed
        if (validar()==true){
            
        }
    }//GEN-LAST:event_guardarPesupActionPerformed

    private void aVentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aVentaActionPerformed
        if (validar()==true){
            
        }
    }//GEN-LAST:event_aVentaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AltaPresupuesto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AltaPresupuesto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AltaPresupuesto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AltaPresupuesto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AltaPresupuesto().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BeliminarProducto;
    private javax.swing.JButton aVenta;
    private javax.swing.JButton ayuda;
    private javax.swing.JButton cancelarPresup;
    private javax.swing.JTextField cantidadRenglon;
    private javax.swing.JTextField clienteElegido;
    private javax.swing.JTextField codigoBarra;
    private javax.swing.JTable detalleProducto;
    private javax.swing.JTextField direccionCliente;
    private javax.swing.JTextField dniCliente;
    private javax.swing.JComboBox formaDePago;
    private javax.swing.JButton guardarPesup;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton jbClienteCasual;
    private javax.swing.JComboBox listaCliente;
    private javax.swing.JTextField mailCliente;
    private javax.swing.JTextField nombreCliente;
    private javax.swing.JTextField precioTotal;
    private javax.swing.JTextField telCliente;
    // End of variables declaration//GEN-END:variables
    private String paraBuscar="";
    private Cliente cli;
    
    private void agregarRenglon() {
        DefaultTableModel tabla = (DefaultTableModel) detalleProducto.getModel();
        long codProducto = parseLong(codigoBarra.getText());
        Producto prod = GestorProducto.ConsultaProducto(codProducto);
        int cantidad = 0;
        
        try{
            cantidad = parseInt(cantidadRenglon.getText());
        }catch (NumberFormatException e){
            JOptionPane.showMessageDialog(null, "Ingrese una cantidad");
        }
        float precio;
        int op = formaDePago.getSelectedIndex();
        switch (op){
            case 0:
                precio=prod.getPrecioContado(); 
                break;
            case 1:
                if (prod.getPrecioDebito()!=0){
                    precio=prod.getPrecioDebito();
                }else{
                    precio=prod.getPrecioContado();
                }
                break;
            default: //Credito y otros
                if (prod.getPrecioCredito()!=0){
                    precio=prod.getPrecioCredito();
                }else{
                    if (prod.getPrecioDebito()!=0){
                        precio=prod.getPrecioDebito();
                    }else{
                        precio=prod.getPrecioContado();
                    }
                }
            break;
        }
        
        int senia = 0;
        if (prod.getCodigoDeProducto() != 0){
            for (int i = 0; i<tabla.getRowCount(); i++){
                if ((tabla.getValueAt(i, 0).toString()).equalsIgnoreCase(valueOf(prod.getCodigoDeProducto())) && senia == 0){
                    int nuevaCantidad = parseInt(tabla.getValueAt(i,2).toString())+cantidad;
                    float precioTotalNuevo = parseFloat(tabla.getValueAt(i,3).toString())*nuevaCantidad;
                    Object [] row = {prod.getCodigoDeProducto(), prod.getNombreProducto(), 
                    nuevaCantidad, precio, precioTotalNuevo};
                    senia=1;
                    tabla.removeRow(i);
                    tabla.addRow(row);
                }
            }
            if (senia == 0){ 
                Object [] row = {prod.getCodigoDeProducto(), prod.getNombreProducto(), 
                cantidad, precio, precio*cantidad};
                tabla.addRow(row);
            }
        }else{
            JOptionPane.showMessageDialog(null, "Error en la lectura del código "
                    + "o producto inexistente");
        }
        
        actualizarTotal();
        codigoBarra.setText("");
        cantidadRenglon.setText("1");
    }

    private void buscarMientrasEscribe() {
        paraBuscar = nombreCliente.getText();
        if (GestorCliente.ConsultaPorDescripcion(paraBuscar).size() != 0) {
            listaCliente.removeAllItems();
            for (int i = 0; i < GestorCliente.ConsultaPorDescripcion(paraBuscar).size(); i++) {
                cli = new Cliente(GestorCliente.ConsultaPorDescripcion(paraBuscar).get(i).getIdCliente(),
                    GestorCliente.ConsultaPorDescripcion(paraBuscar).get(i).getNombreCliente(),
                    GestorCliente.ConsultaPorDescripcion(paraBuscar).get(i).getDireccionCliente(),
                    GestorCliente.ConsultaPorDescripcion(paraBuscar).get(i).getCodigoPostalCliente(),
                    GestorCliente.ConsultaPorDescripcion(paraBuscar).get(i).getTelefonoCliente(),
                    GestorCliente.ConsultaPorDescripcion(paraBuscar).get(i).getDniCuilCuit(),
                    GestorCliente.ConsultaPorDescripcion(paraBuscar).get(i).getMailCliente());
                listaCliente.addItem(cli);
            }
        }
    }

    private void actualizarTotal() {
        DefaultTableModel tabla = (DefaultTableModel) detalleProducto.getModel();
        float suma = 0;
        for (int i = 0; i<tabla.getRowCount(); i++){
            suma += parseFloat(tabla.getValueAt(i,4).toString());
        }
        precioTotal.setText("$ " + valueOf(suma));
    }

    private void eliminarItemProducto() {
        DefaultTableModel tabla = (DefaultTableModel) detalleProducto.getModel();
        if (tabla.getRowCount()!=0){
            try{
                tabla.removeRow(detalleProducto.getSelectedRow());
            }catch (ArrayIndexOutOfBoundsException e){
                JOptionPane.showMessageDialog(null, "Debe seleccionar el producto"
                        + " a eliminar");
            }
        }
    }

    private void recalcularImporte() {
        DefaultTableModel tabla = (DefaultTableModel) detalleProducto.getModel();

        
        if (tabla.getRowCount()!=0){
        
            for (int i = 0; i<tabla.getRowCount(); i++){
                Producto prod = GestorProducto.ConsultaProducto(parseLong(detalleProducto.getValueAt(i, 0).toString()));
                float precio;
                int op = formaDePago.getSelectedIndex();
                switch (op){
                    case 0:
                        precio=prod.getPrecioContado(); 
                        break;
                    case 1:
                        if (prod.getPrecioDebito()!=0){
                            precio=prod.getPrecioDebito();
                        }else{
                            precio=prod.getPrecioContado();
                        }
                        break;
                    default: //Credito y otros
                        if (prod.getPrecioCredito()!=0){
                            precio=prod.getPrecioCredito();
                        }else{
                            if (prod.getPrecioDebito()!=0){
                                precio=prod.getPrecioDebito();
                            }else{
                                precio=prod.getPrecioContado();
                            }
                        }
                    break;
                }
                    float precioTotalNuevo = parseFloat(tabla.getValueAt(i,3).toString())*parseInt(detalleProducto.getValueAt(i, 2).toString());
                    Object [] row = {prod.getCodigoDeProducto(), prod.getNombreProducto(), 
                    parseInt(detalleProducto.getValueAt(i, 2).toString()), precio, precioTotalNuevo};
                    tabla.removeRow(i);
                    tabla.addRow(row);
            } 
        }
        actualizarTotal();
    }

    private boolean validar() {
        boolean validar = true;
        DefaultTableModel tabla = (DefaultTableModel) detalleProducto.getModel();
        if (tabla.getRowCount()==0){
            JOptionPane.showMessageDialog(null, "No hay ningún renglón");
            validar = false;
        }

        if (clienteElegido.getText().equalsIgnoreCase("") && (formaDePago.getSelectedIndex()==3 || formaDePago.getSelectedIndex()==4)){
            JOptionPane.showMessageDialog(null, "La forma de pago seleccionada requiere seleccionar un cliente");
            validar = false;
        }
        return validar;
    }
}
